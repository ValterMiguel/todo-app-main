{"remainingRequest":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/odd/Frontend Mentor Challenges/todo-app-main/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/src/App.vue","mtime":1623509405786},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzJjM2U1MDsKfQoKI2FwcC50aGVtZS0tZGFyayB7CiAgY29sb3I6IHdoaXRlOwp9CgojbmF2IGgxIHsKICBwYWRkaW5nOiAzMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGNvbG9yOiAjMmMzZTUwOwp9CgoudGhlbWUtLWRhcmsgI25hdiBoMSB7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgY29sb3I6ICM0MmI5ODM7Cn0KCmJvZHkudGhlbWUtLWRhcmsgewogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <body id=\"app\" v-dark-mode>\n    <div class=\"header\">\n      <div id=\"nav\">\n        <h1>img here</h1>\n      </div>\n    </div>\n    <div class=\"main\">\n      <div class=\"todos-header\">\n        <a class=\"todos-title\">todo</a>\n        <div class=\"todos-header-right\">\n          <Toggle></Toggle>\n        </div>\n      </div>\n      <div class=\"add-todo-container\">\n        <add-todo></add-todo>\n      </div>\n      <div class=\"todos-card\">\n        <div class=\"todos-container\">\n          <div class=\"tab-content\" v-show=\"tab_1\">\n            <todos-list>\n              <draggable v-model=\"allTodos\" group=\"todoGroup\">\n                <todo-item\n                  v-for=\"todo in allTodos\"\n                  :key=\"todo.id\"\n                  :todo=\"todo\"\n                ></todo-item>\n              </draggable>\n            </todos-list>\n          </div>\n          <div class=\"tab-content\" v-show=\"tab_2\">\n            <todos-list>\n              <todo-item\n                v-for=\"todo in active\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </todos-list>\n          </div>\n          <div class=\"tab-content\" v-show=\"tab_3\">\n            <todos-list>\n              <todo-item\n                v-for=\"todo in completed\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </todos-list>\n          </div>\n        </div>\n        <div class=\"todos-footer\">\n          <div class=\"todos-footer-content\">\n            <div class=\"left\">\n              <span>{{ itemsLeft }} items left</span>\n            </div>\n            <div class=\"center\">\n              <div v-for=\"tab in tabItems\" :key=\"tab.id\" class=\"tab-links\">\n                <span\n                  :class=\"tab.id === tab_active ? 'tab_active' : ''\"\n                  @click=\"tabDisplay(tab)\"\n                  >{{ tab.title }}</span\n                >\n              </div>\n            </div>\n            <div class=\"right\">\n              <span @click=\"clearCompleted\">Clear Completed</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"main-drag-and-drop\">\n        <div v-if=\"showDragAndDropLlist\">\n          <p>{{ msn }}</p>\n        </div>\n        <div class=\"drag-drop-container\" else>\n          <todos-list>\n            <draggable v-model=\"allTodos2\" group=\"todoGroup\">\n              <todo-item\n                v-for=\"todo in allTodos2\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </draggable>\n          </todos-list>\n        </div>\n      </div>\n    </div>\n  </body>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport AddTodo from \"./components/AddTodo.vue\";\nimport TodosList from \"./components/TodosList.vue\";\nimport TodoItem from \"./components/TudoItem.vue\";\nimport Toggle from \"./components/Toggle.vue\";\n\nexport default {\n  name: \"App\",\n  components: { AddTodo, TodosList, TodoItem, Toggle, draggable },\n  computed: {\n    ...mapGetters([\n      \"tabItems\",\n      \"itemsLeft\",\n      \"active\",\n      \"completed\",\n      \"tab_active\",\n      \"tab_1\",\n      \"tab_2\",\n      \"tab_3\",\n      \"msn\",\n      \"showDragAndDropLlist\",\n      \"themeToggle\",\n      \"getTheme\",\n    ]),\n    allTodos: {\n      get() {\n        return this.$store.getters.allTodos;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_LIST\", value);\n      },\n    },\n    allTodos2: {\n      get() {\n        return this.$store.getters.allTodos2;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_LIST_2\", value);\n      },\n    },\n    active: {\n      get() {\n        return this.$store.getters.active;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_ACTIVE\", value);\n      },\n    },\n    completed: {\n      get() {\n        return this.$store.getters.completed;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_COMPLETED\", value);\n      },\n    },\n\n    darkMode: {\n      get() {\n        return this.$store.getters.completed;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_COMPLETED\", value);\n      },\n    },\n  },\n\n  methods: {\n    ...mapActions([\"switchTab\", \"clearCompleted\"]),\n    tabDisplay(tab) {\n      this.switchTab(tab);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#app.theme--dark {\n  color: white;\n}\n\n#nav h1 {\n  padding: 30px;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n.theme--dark #nav h1 {\n  font-weight: bold;\n  color: #42b983;\n}\n\nbody.theme--dark {\n  background-color: black;\n}\n</style>\n"]}]}