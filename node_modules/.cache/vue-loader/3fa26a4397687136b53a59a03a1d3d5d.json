{"remainingRequest":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/odd/Frontend Mentor Challenges/todo-app-main/src/components/TudoItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/src/components/TudoItem.vue","mtime":1623467336004},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVG9kb0l0ZW0iLAogIHByb3BzOiBbInRvZG8iXSwKICBjb21wdXRlZDogewogICAgc2hvd0ljb246IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnNob3dJY29uOwogICAgICB9LAogICAgICBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlNIT1dfREVMRVRFX0lDT04iLCB2YWx1ZSk7CiAgICAgIH0sCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbImNoZWNrVG9kbyIsICJkZWxldGVUb2RvIl0pLAogICAgc2hvd0NoZWNrZWRUb2RvKHRvZG8pIHsKICAgICAgdGhpcy5jaGVja1RvZG8odG9kbyk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["TudoItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TudoItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"todo-item-container\">\n    <div\n      class=\"todo-item\"\n      @mouseover=\"showIcon = todo\"\n      @mouseout=\"showIcon = null\"\n    >\n      <div\n        class=\"todo-circle\"\n        :class=\"{ active: todo.completed }\"\n        @click=\"showCheckedTodo(todo)\"\n      >\n        <img src=\"../assets/icons/icon-check.svg\" v-if=\"todo.completed\" />\n      </div>\n      <p :class=\"{ completed: todo.completed }\">{{ todo.title }}</p>\n      <span @click=\"deleteTodo(todo)\">\n        <img\n          src=\"../assets/icons/icon-cross.svg\"\n          alt=\"\"\n          v-if=\"showIcon === todo\"\n        />\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n  name: \"TodoItem\",\n  props: [\"todo\"],\n  computed: {\n    showIcon: {\n      get() {\n        return this.$store.getters.showIcon;\n      },\n      set(value) {\n        this.$store.commit(\"SHOW_DELETE_ICON\", value);\n      },\n    },\n  },\n  methods: {\n    ...mapActions([\"checkTodo\", \"deleteTodo\"]),\n    showCheckedTodo(todo) {\n      this.checkTodo(todo);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}