{"remainingRequest":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/odd/Frontend Mentor Challenges/todo-app-main/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/src/App.vue","mtime":1623598013151},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/odd/Frontend Mentor Challenges/todo-app-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgQWRkVG9kbyBmcm9tICIuL2NvbXBvbmVudHMvQWRkVG9kby52dWUiOwppbXBvcnQgVG9kb3NMaXN0IGZyb20gIi4vY29tcG9uZW50cy9Ub2Rvc0xpc3QudnVlIjsKaW1wb3J0IFRvZG9JdGVtIGZyb20gIi4vY29tcG9uZW50cy9UdWRvSXRlbS52dWUiOwppbXBvcnQgVG9nZ2xlIGZyb20gIi4vY29tcG9uZW50cy9Ub2dnbGUudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBjb21wb25lbnRzOiB7IEFkZFRvZG8sIFRvZG9zTGlzdCwgVG9kb0l0ZW0sIFRvZ2dsZSwgZHJhZ2dhYmxlIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAidGFiSXRlbXMiLAogICAgICAiaXRlbXNMZWZ0IiwKICAgICAgImFjdGl2ZSIsCiAgICAgICJjb21wbGV0ZWQiLAogICAgICAidGFiX2FjdGl2ZSIsCiAgICAgICJ0YWJfMSIsCiAgICAgICJ0YWJfMiIsCiAgICAgICJ0YWJfMyIsCiAgICAgICJtc24iLAogICAgICAic2hvd0RyYWdBbmREcm9wTGxpc3QiLAogICAgICAidGhlbWVUb2dnbGUiLAogICAgICAiZ2V0VGhlbWUiLAogICAgXSksCiAgICBhbGxUb2RvczogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuYWxsVG9kb3M7CiAgICAgIH0sCiAgICAgIHNldCh2YWx1ZSkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgiVVBEQVRFX0xJU1QiLCB2YWx1ZSk7CiAgICAgIH0sCiAgICB9LAogICAgYWxsVG9kb3MyOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5hbGxUb2RvczI7CiAgICAgIH0sCiAgICAgIHNldCh2YWx1ZSkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgiVVBEQVRFX0xJU1RfMiIsIHZhbHVlKTsKICAgICAgfSwKICAgIH0sCiAgICBhY3RpdmU6IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmFjdGl2ZTsKICAgICAgfSwKICAgICAgc2V0KHZhbHVlKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJVUERBVEVfQUNUSVZFIiwgdmFsdWUpOwogICAgICB9LAogICAgfSwKICAgIGNvbXBsZXRlZDogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuY29tcGxldGVkOwogICAgICB9LAogICAgICBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlVQREFURV9DT01QTEVURUQiLCB2YWx1ZSk7CiAgICAgIH0sCiAgICB9LAogICAgZGFya01vZGU6IHsKICAgICAgZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmRhcmtNb2RlOwogICAgICB9LAogICAgICBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoIlVQREFURV9EQVJLX01PREUiLCB2YWx1ZSk7CiAgICAgIH0sCiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoWyJzd2l0Y2hUYWIiLCAiY2xlYXJDb21wbGV0ZWQiXSksCiAgICB0YWJEaXNwbGF5KHRhYikgewogICAgICB0aGlzLnN3aXRjaFRhYih0YWIpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" :class=\"{ 'theme-dark': darkMode }\">\n    <div class=\"header\">\n      <img src=\"./assets/bg/bg-desktop-dark.jpg\" v-if=\"darkMode\" />\n      <img src=\"./assets/bg/bg-desktop-light.jpg\" v-else />\n    </div>\n    <div class=\"main\">\n      <div class=\"todos-header\">\n        <a class=\"todos-title\">todo</a>\n        <div class=\"todos-header-right\">\n          <Toggle></Toggle>\n        </div>\n      </div>\n      <div class=\"add-todo-container\">\n        <add-todo></add-todo>\n      </div>\n      <div class=\"todos-card\">\n        <div class=\"todos-container\">\n          <div class=\"tab-content\" v-show=\"tab_1\">\n            <todos-list>\n              <draggable v-model=\"allTodos\" group=\"todoGroup\">\n                <todo-item\n                  v-for=\"todo in allTodos\"\n                  :key=\"todo.id\"\n                  :todo=\"todo\"\n                ></todo-item>\n              </draggable>\n            </todos-list>\n          </div>\n          <div class=\"tab-content\" v-show=\"tab_2\">\n            <todos-list>\n              <todo-item\n                v-for=\"todo in active\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </todos-list>\n          </div>\n          <div class=\"tab-content\" v-show=\"tab_3\">\n            <todos-list>\n              <todo-item\n                v-for=\"todo in completed\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </todos-list>\n          </div>\n        </div>\n        <div class=\"todos-footer\">\n          <div class=\"todos-footer-content\">\n            <div class=\"left\">\n              <span>{{ itemsLeft }} items left</span>\n            </div>\n            <div class=\"center\">\n              <div v-for=\"tab in tabItems\" :key=\"tab.id\" class=\"tab-links\">\n                <span\n                  :class=\"tab.id === tab_active ? 'tab_active' : ''\"\n                  @click=\"tabDisplay(tab)\"\n                  >{{ tab.title }}</span\n                >\n              </div>\n            </div>\n            <div class=\"right\">\n              <span @click=\"clearCompleted\">Clear Completed</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"main-drag-and-drop\">\n        <div v-if=\"showDragAndDropLlist\">\n          <p>{{ msn }}</p>\n        </div>\n        <div class=\"drag-drop-container\" else>\n          <todos-list>\n            <draggable v-model=\"allTodos2\" group=\"todoGroup\">\n              <todo-item\n                v-for=\"todo in allTodos2\"\n                :key=\"todo.id\"\n                :todo=\"todo\"\n              ></todo-item>\n            </draggable>\n          </todos-list>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport AddTodo from \"./components/AddTodo.vue\";\nimport TodosList from \"./components/TodosList.vue\";\nimport TodoItem from \"./components/TudoItem.vue\";\nimport Toggle from \"./components/Toggle.vue\";\n\nexport default {\n  name: \"App\",\n  components: { AddTodo, TodosList, TodoItem, Toggle, draggable },\n  computed: {\n    ...mapGetters([\n      \"tabItems\",\n      \"itemsLeft\",\n      \"active\",\n      \"completed\",\n      \"tab_active\",\n      \"tab_1\",\n      \"tab_2\",\n      \"tab_3\",\n      \"msn\",\n      \"showDragAndDropLlist\",\n      \"themeToggle\",\n      \"getTheme\",\n    ]),\n    allTodos: {\n      get() {\n        return this.$store.getters.allTodos;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_LIST\", value);\n      },\n    },\n    allTodos2: {\n      get() {\n        return this.$store.getters.allTodos2;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_LIST_2\", value);\n      },\n    },\n    active: {\n      get() {\n        return this.$store.getters.active;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_ACTIVE\", value);\n      },\n    },\n    completed: {\n      get() {\n        return this.$store.getters.completed;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_COMPLETED\", value);\n      },\n    },\n    darkMode: {\n      get() {\n        return this.$store.getters.darkMode;\n      },\n      set(value) {\n        this.$store.commit(\"UPDATE_DARK_MODE\", value);\n      },\n    },\n  },\n\n  methods: {\n    ...mapActions([\"switchTab\", \"clearCompleted\"]),\n    tabDisplay(tab) {\n      this.switchTab(tab);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}